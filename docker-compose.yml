services:
  # Mi primer contenedo es un servidor de base de datos mysql
  mysql:
    image: mysql:latest
    container_name: mySqlDocker
    hostname: 2b38cdb639c7
    mac_address: 02:42:ac:11:00:02
    environment:
      MYSQL_ROOT_PASSWORD: carpocapsa
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      GOSU_VERSION: 1.17
      MYSQL_MAJOR: innovation
      MYSQL_VERSION: 9.0.1-1.el9
      MYSQL_SHELL_VERSION: 9.0.1-1.el9
      TZ: Europe/Madrid   # EStablecer la zona horaria
    # Tiene dos volúmenes persistentes, uno para los datos y otro para backup
    volumes:
      - mysql_data:/var/lib/mysql
      - backup:/backup
    ports:
      - "3306:3306"
    restart: "unless-stopped"
    runtime: runc
    networks:
    - miRed
  # Contenedor para hacer backups de mySQL
  automysqlbackup:
    image: selim13/automysqlbackup
    container_name: mySqlbackup
    environment:
      DBHOST: mySqlDocker
      DBNAMES: all
      USERNAME: root
      PASSWORD: carpocapsa
      # Programo un backup diario
      CRON_SCHEDULE: "30 12 1 * *" # Diario
      TZ: Europe/Madrid   # Establecer la zona horaria
    # Comparte el volumen backup con mysql por si hay que recuperar
    volumes:
      - backup:/backup
    restart: "unless-stopped"
    # Depende de mysql pues hace backups de él
    depends_on:
        - mysql
    networks:
    - miRed   
  # Contenedor que ejecuta diariamente tres guiones.
  # Uno para traer los datos climáticos del SIAR y otros dos de AEMET
  # Tiene python, vi y crontab
  cron_etl:    #
    build:
        context: ./cronETL
    image: cron_etl       
    container_name: cronETL    
    hostname: 252654c43934        
    environment:
      PATH: /usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      LANG: ES.UTF-8
      GPG_KEY: 7169605F62C751356D054A26A821E680E5FA6305
      PYTHON_VERSION: 3.12.6
      TZ: Europe/Madrid   
    working_dir: /usr/src/app    
    restart: "unless-stopped"               
    networks:
      - miRed                    
  # Contenedor que realiza diariamente las predicciones y reentrena semanalmente el modelo
  # Tiene python, vi y crontab
  cron_ml:
    build:
        context: ./cronML
    image: cron_ml           
    container_name: cronML     
    hostname: cront-prediccion          
    environment:
      PATH: /usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      LANG: ES.UTF-8
      GPG_KEY: 7169605F62C751356D054A26A821E680E5FA6305
      PYTHON_VERSION: 3.12.6
      TZ: Europe/Madrid
    working_dir: /usr/src/app
    restart: "unless-stopped"
    networks:
      - miRed
  # Este contenedor ejecuta la aplicación FLASK que permite a la denominación
  # meter los datos de capturas y comprobar que se han traido bien los climáticos
  appdatoscarpo:                  
    build:
        context: ./appDatosCarpo
    image: appdatoscarpo     
    container_name: appDatosCarpo   
    hostname: 7f8bbf70ff82       
    environment:
      PATH: /usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin 
      LANG: ES.UTF-8
      GPG_KEY: 7169605F62C751356D054A26A821E680E5FA6305
      PYTHON_VERSION: 3.12.6
      TZ: Europe/Madrid   
    working_dir: /usr/src/app    
    # Escucha en el puerto 5000 y lo mapeo a mi servidor
    ports:
      - "5000:5000"
    restart: "unless-stopped"               
    networks:
      - miRed                    
# Me crea los volúmenes de datos y backup para que persistan, si no existen.
volumes:
  mysql_data:
  backup:
# Me crea la red 
networks:
  miRed: